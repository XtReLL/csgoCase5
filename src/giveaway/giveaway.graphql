type Giveaway {
  id: ID
  winner: User
  giveawayBet: GiveawayBet
  item: Item
}

type GiveawayListData {
  data: [Giveaway]!
  pagination: CursorBasedPaginationData!
}

input SearchGiveawayInput {
  type: GiveawayType
}

type GiveawayBet {
  id: ID
}

enum GiveawayType {
  CUSTOM
  DAILY
  WEEKLY
}

input CreateGiveawayInput {
  itemId: Int!
  endDate: Date
  type: GiveawayType
}

input UpdateGiveawayInput {
  id: ID!
  itemId: Int
  endDate: Date
  type: GiveawayType
}

type Query {
  giveaways(
    pagination: Pagination
    search: SearchGiveawayInput
  ): GiveawayListData!
  giveaway(id: ID!): Giveaway!
}

type Mutation {
  createGiveaway(createGiveawayInput: CreateGiveawayInput!): Giveaway!
  updateGiveaway(updateGiveawayInput: UpdateGiveawayInput!): Giveaway!
  joinToGiveaway(id: ID!): GiveawayBet!
  removeGiveaway(id: ID!): Boolean!
}

type Case {
  id: ID!
}
enum CaseRarityType {
  CUSTOM
  CONSUMER
  INDUSTRIAL
}

enum CaseStatusType {
  ACTIVE
  HIDE
}

type CaseListData {
  data: [Case]!
  pagination: CursorBasedPaginationData!
}

input CreateCaseInput {
  name: String!
  price: Int
  rarirty: CaseRarityType
  category: String
  status: CaseStatusType
  discount: Int
  icon: String
  bankPercent: Int
}

input OpenCaseInput {
  id: String!
  count: Int!
}

input UpdateCaseInput {
  id: ID!
  name: String
  price: Int
  rarirty: CaseRarityType
  category: String
  status: CaseStatusType
  discount: Int
  icon: String
  bankPercent: Int
}

type Query {
  cases(pagination: Pagination): CaseListData!
  case(id: ID!): Case!
}

type Mutation {
  createCase(createCaseInput: CreateCaseInput!): Case!
  updateCase(updateCaseInput: UpdateCaseInput!): Case!
  removeCase(id: ID!): Boolean!
}

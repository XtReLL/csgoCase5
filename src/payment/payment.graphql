type Payment {
  id: ID
  paymentId: String
  userId: Int
  sum: Int
  status: PaymentStatusType
  method: PaymentMethodType
}

type PaymentsListData {
  data: [Payment]!
  pagination: CursorBasedPaginationData!
}

input CreatePaymentInput {
  method: PaymentMethodType!
  sum: Float!
}

enum PaymentMethodType {
  FREE_KASSA
  COINBASE
  SHADOWPAY
  NONE
}

enum PaymentStatusType {
  PENDING
  SUCCESSFUL
  REJECTED
}

type Query {
  getUserPayments(userId: Int!, pagination: Pagination): PaymentsListData!
}

type Mutation {
  createPayment(createPaymentInput: CreatePaymentInput!): String!
}
